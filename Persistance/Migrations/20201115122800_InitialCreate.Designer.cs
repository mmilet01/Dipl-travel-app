// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistance;

namespace Persistance.Migrations
{
    [DbContext(typeof(mmiletaContext))]
    [Migration("20201115122800_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Persistance.Memories", b =>
                {
                    b.Property<int>("MemoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("memoryId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnName("createdBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnName("createdOn")
                        .HasColumnType("date");

                    b.Property<bool>("IsPrivate")
                        .HasColumnName("isPrivate")
                        .HasColumnType("bit");

                    b.Property<string>("MemoryDescription")
                        .IsRequired()
                        .HasColumnName("memoryDescription")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("MemoryId")
                        .HasName("PK__memories__96A15C453954E06C");

                    b.HasIndex("CreatedBy");

                    b.ToTable("memories");
                });

            modelBuilder.Entity("Persistance.MemoryImages", b =>
                {
                    b.Property<int>("MemoryImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("memoryImageId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BelongsTo")
                        .HasColumnName("belongsTo")
                        .HasColumnType("int");

                    b.Property<string>("PhotoPath")
                        .IsRequired()
                        .HasColumnName("photoPath")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("MemoryImageId")
                        .HasName("PK__memoryIm__283B4828AC616ABB");

                    b.HasIndex("BelongsTo");

                    b.ToTable("memoryImages");
                });

            modelBuilder.Entity("Persistance.UserRelationshipStatus", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("statusId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StatusText")
                        .IsRequired()
                        .HasColumnName("statusText")
                        .HasColumnType("varchar(60)")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.HasKey("StatusId")
                        .HasName("PK__userRela__36257A187926388E");

                    b.ToTable("userRelationshipStatus");
                });

            modelBuilder.Entity("Persistance.Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("userId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnName("createdOn")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("firstName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnName("lastName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PasswordField")
                        .IsRequired()
                        .HasColumnName("passwordField")
                        .HasColumnType("text");

                    b.HasKey("UserId")
                        .HasName("PK__users__CB9A1CFF19500154");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Persistance.UsersImages", b =>
                {
                    b.Property<int>("UserImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("userImageId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BelongsTo")
                        .HasColumnName("belongsTo")
                        .HasColumnType("int");

                    b.Property<string>("PhotoPath")
                        .IsRequired()
                        .HasColumnName("photoPath")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("UserImageId")
                        .HasName("PK__usersIma__8480DF35A7CE6092");

                    b.HasIndex("BelongsTo");

                    b.ToTable("usersImages");
                });

            modelBuilder.Entity("Persistance.UsersRelationship", b =>
                {
                    b.Property<int>("RelationShip")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("relationShip")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FirstUserId")
                        .HasColumnName("firstUserId")
                        .HasColumnType("int");

                    b.Property<int>("RelationshipStatus")
                        .HasColumnName("relationshipStatus")
                        .HasColumnType("int");

                    b.Property<int>("SecondUserId")
                        .HasColumnName("secondUserId")
                        .HasColumnType("int");

                    b.HasKey("RelationShip")
                        .HasName("PK__usersRel__711C4A15FCEEB959");

                    b.HasIndex("FirstUserId");

                    b.HasIndex("RelationshipStatus");

                    b.HasIndex("SecondUserId");

                    b.ToTable("usersRelationship");
                });

            modelBuilder.Entity("Persistance.UsersTaggedOnMemory", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("tagId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MemoryId")
                        .HasColumnName("memoryId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnName("userId")
                        .HasColumnType("int");

                    b.HasKey("TagId")
                        .HasName("PK__usersTag__50FC015783197F91");

                    b.HasIndex("MemoryId");

                    b.HasIndex("UserId");

                    b.ToTable("usersTaggedOnMemory");
                });

            modelBuilder.Entity("Persistance.Memories", b =>
                {
                    b.HasOne("Persistance.Users", "CreatedByNavigation")
                        .WithMany("Memories")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK_Memories_Users")
                        .IsRequired();
                });

            modelBuilder.Entity("Persistance.MemoryImages", b =>
                {
                    b.HasOne("Persistance.Memories", "BelongsToNavigation")
                        .WithMany("MemoryImages")
                        .HasForeignKey("BelongsTo")
                        .HasConstraintName("FK_MemoryImages_Users")
                        .IsRequired();
                });

            modelBuilder.Entity("Persistance.UsersImages", b =>
                {
                    b.HasOne("Persistance.Users", "BelongsToNavigation")
                        .WithMany("UsersImages")
                        .HasForeignKey("BelongsTo")
                        .HasConstraintName("FK_UserImages_Users")
                        .IsRequired();
                });

            modelBuilder.Entity("Persistance.UsersRelationship", b =>
                {
                    b.HasOne("Persistance.Users", "FirstUser")
                        .WithMany("UsersRelationshipFirstUser")
                        .HasForeignKey("FirstUserId")
                        .HasConstraintName("FK_FirstUser_Users")
                        .IsRequired();

                    b.HasOne("Persistance.UserRelationshipStatus", "RelationshipStatusNavigation")
                        .WithMany("UsersRelationship")
                        .HasForeignKey("RelationshipStatus")
                        .HasConstraintName("FK_UserRelationshipStatus_Stauts")
                        .IsRequired();

                    b.HasOne("Persistance.Users", "SecondUser")
                        .WithMany("UsersRelationshipSecondUser")
                        .HasForeignKey("SecondUserId")
                        .HasConstraintName("FK_SecondUser_Users")
                        .IsRequired();
                });

            modelBuilder.Entity("Persistance.UsersTaggedOnMemory", b =>
                {
                    b.HasOne("Persistance.Memories", "Memory")
                        .WithMany("UsersTaggedOnMemory")
                        .HasForeignKey("MemoryId")
                        .HasConstraintName("FK_TaggedMemory_Users")
                        .IsRequired();

                    b.HasOne("Persistance.Users", "User")
                        .WithMany("UsersTaggedOnMemory")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_TaggedUsers_Memory")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
